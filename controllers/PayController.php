<?php
/**
 * Created by PhpStorm.
 * User: ivphpan
 * Date: 17.03.17
 * Time: 17:13
 */

namespace app\controllers;


use app\components\extend\FrontendCabinetController;
use app\models\forms\InplatForm;
use app\models\Pay;
use yii\filters\AccessControl;
use yii\web\HttpException;
use Yii;
use yii\web\Response;

class PayController extends FrontendCabinetController
{
    public $enableCsrfValidation = false;

    public function behaviors()
    {
        $behaviors = parent::behaviors(); // TODO: Change the autogenerated stub
        $behaviors['access'] = [
            'class' => AccessControl::className(),
            'rules' => [
	            [
	            	'allow' => true,
		            'actions' => ['test', 'test2', 'ad', 'result', 'check',],
		            'roles' => ['@']
	            ],
	            [
		            'allow' => true,
		            'actions' => ['callback'],
	            ],
            ]
        ];
        return $behaviors;
    }

    public function actionTest()
    {

        $pay = Pay::find()->one();
        $user = Yii::$app->user->identity;
        $inplatFormUrl = Yii::$app->inplat->formUrl($pay, $user);

        return $this->render('test', ['pay' => $pay, 'inplatFormUrl' => $inplatFormUrl]);
    }

	public function actionTest2()
	{
		$user = Yii::$app->user->identity;
		$inplatFormUrl = Yii::$app->inplat->formLinkUrl($user);

		return $this->render('test', ['inplatFormUrl' => $inplatFormUrl]);
	}

    public function actionResult()
    {
        $pay = Pay::find()->one();
        $params = [
            'method' => 'result',
            'id' => rand(1, 1323),
            'pay_type' => 'card',
            'status' => 'auth',
            'code' => 0,
            'params' => [
                'id' => $pay->id,
                'sum' => $pay->sum * 100,
                'description' => $pay->description(),
            ],
        ];
        $model = new InplatForm();
        if ($model->load($params, '') && $model->result()) {
            echo 'Оплата успешно проведена!';
        } else {
            print_r($model->errors);
        }
    }

    public function actionAd($objectId, $serviceId)
    {
        $model = Pay::findOne(['objectId' => $objectId]);
        $model->serviceId = $serviceId;

        if (!$model) {
            throw new HttpException(404);
        }

        $model->calculate();
        $user = Yii::$app->user->identity;

        return Yii::$app->inplat->formUrl($model, $user);
    }

    public function actionCheck($objectId)
    {
        $model = Pay::findOne(['objectId' => $objectId]);

        $model->paid();

        if (!$model) {
            throw new HttpException(404);
        }

        Yii::$app->response->format = Response::FORMAT_JSON;

        return $model->statusPaid() ? $model->paidMessage() : false;
    }


	public function actionCallback()
	{
		return 'ok';
	}
}